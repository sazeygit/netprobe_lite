
networks:
  netprobe-test:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.3.0/24

services:
  # coredns:
  #   container_name: coredns
  #   image: coredns/coredns:latest
  #   volumes:
  #     - ./config/coredns/Corefile:/home/nonroot/Corefile:ro
  #   ports:
  #     - 5533:53/udp
  #   networks:
  #     - netprobe-test

  redis:
    restart: always
    container_name: redis-test
    image: "redis:latest"
    volumes:
      - ./config/redis/redis.conf:/etc/redis/redis.conf
    networks:
      - netprobe-test  # Attach to the custom network

  netprobe:
    restart: always
    container_name: netprobe-probe-test
    build: .
    volumes:
      - .:/netprobe_lite
    environment:
      MODULE: "NETPROBE"
    networks:
      - netprobe-test  # Attach to the custom network

  presentation:
    restart: always
    container_name: netprobe-presentation-test
    build: .
    volumes:
      - .:/netprobe_lite
    environment:
      MODULE: "PRESENTATION"
    networks:
      - netprobe-test  # Attach to the custom network

  prometheus:
    restart: always
    container_name: prometheus-test
    image: "prom/prometheus"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/prometheus/prometheus-storage/_data:/prometheus
    # ports:
    #   - '9090:9090'
    networks:
      - netprobe-test  # Attach to the custom network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=365d'

  grafana:
    user: "0"
    restart: always
    image: "grafana/grafana-enterprise"
    container_name: grafana-test
    volumes:
      - ./config/grafana/datasources/automatic.yml:/etc/grafana/provisioning/datasources/automatic.yml
      - ./config/grafana/dashboards/main.yml:/etc/grafana/provisioning/dashboards/main.yml
      - ./config/grafana/dashboards/netprobe.json:/var/lib/grafana/dashboards/netprobe.json
      - ./config/grafana/grafana-storage:/var/lib/grafana
    ports:
      - '3001:3000'
    networks:
      - netprobe-test  # Attach to the custom network

  loki:
    restart: always
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - netprobe-test
